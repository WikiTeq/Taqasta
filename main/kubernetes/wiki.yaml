apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wiki
spec:
  selector:
    matchLabels:
      app: wiki
  replicas: 1
  template:
    metadata:
      labels:
        app: wiki
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: pool
                operator: In
                values:
                - shared
      tolerations:
      - key: "pool"
        value: "shared"
        effect: "NoSchedule"
      initContainers:
        # see https://github.com/kubernetes/git-sync
        - name: git-sync-once
          image: registry.k8s.io/git-sync/git-sync:v4.4.0
          command:
            - sh
            - -c
            - |
              mkdir -p /root/.ssh
              /git-sync \
                --one-time \
                --ssh-key-file=/ssh/ssh_key \
                --repo=git@github.com:WikiTeq/Taqasta.git \
                --root=/git \
                --link=head \
                --ssh-known-hosts=false \
                -v=10 \
                --ref=QLOUD-139-worker
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
            - name: git
              mountPath: /git
            - name: git-auth
              mountPath: /ssh
      containers:
        - name: taqasta
          image: ghcr.io/wikiteq/taqasta:latest
          command:
            - sh
            - -c
            - |
              # Symlinks pointed to git-sync resources instead of docker-compose mounts
              mkdir -p /var/www/mediawiki/w/_settings
              ln -sf /git/head/main/LocalSettings.dev.php /var/www/mediawiki/w/_settings/LocalSettings.php

              # Apache is following symlinks, but with each new commit git-sync is recreating the /git/head symlink, so we are forcing Apache to read them
              (
                while true; do
                inotifywait -e MOVE_SELF,DELETE_SELF /git/head && apache2ctl graceful
                sleep 1
                done
              ) &
              # Start Apache in foreground
              /run-apache.sh
          envFrom:
            - configMapRef:
                name: wiki-env
            - secretRef:
                name: wiki-secrets
          env:
            - name: MW_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: mysql-env
                  key: MYSQL_DATABASE
            # note: both install and user ops are as root for now
            - name: MW_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: mysql-password
                  key: password
            - name: MW_DB_INSTALLDB_PASS
              valueFrom:
                secretKeyRef:
                  name: mysql-password
                  key: password
          ports:
          - containerPort: 80
          volumeMounts:
          - name: git
            mountPath: /git
          - name: data
            mountPath: /mediawiki
          - name: images
            mountPath: /mediawiki/images
        # runJobs worker container
        - name: taqasta-worker
          image: ghcr.io/wikiteq/taqasta:latest
          command:
            - sh
            - -c
            - |
              # Symlinks pointed to git-sync resources instead of docker-compose mounts
              mkdir -p /var/www/mediawiki/w/_settings
              ln -sf /git/head/main/LocalSettings.dev.php /var/www/mediawiki/w/_settings/LocalSettings.php
              ln -sf "$MW_VOLUME/LocalSettings.php" "$MW_HOME/LocalSettings.php"
              sleep 1
              # Poor mans dependency on the main container availability
              /wait-for-it.sh -t 600 "127.0.0.1:80" || exit 1
              php $MW_HOME/maintenance/run.php runJobs --memory-limit max --wait
          envFrom:
            - configMapRef:
                name: wiki-env
            - secretRef:
                name: wiki-secrets
          env:
            - name: MW_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: mysql-env
                  key: MYSQL_DATABASE
            # note: both install and user ops are as root for now
            - name: MW_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: mysql-password
                  key: password
            - name: MW_DB_INSTALLDB_PASS
              valueFrom:
                secretKeyRef:
                  name: mysql-password
                  key: password
          volumeMounts:
            - name: git
              mountPath: /git
            - name: data
              mountPath: /mediawiki
            - name: images
              mountPath: /mediawiki/images
        # see https://github.com/kubernetes/git-sync
        - name: git-sync
          image: registry.k8s.io/git-sync/git-sync:v4.4.0
          command:
            - sh
            - -c
            - |
              mkdir -p /root/.ssh
              /git-sync \
                --period=60s \
                --ssh-key-file=/ssh/ssh_key \
                --repo=git@github.com:WikiTeq/Taqasta.git \
                --root=/git \
                --link=head \
                --max-failures=1000000000 \
                --ssh-known-hosts=false \
                -v=10 \
                --ref=QLOUD-139-worker
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
            - name: git
              mountPath: /git
            - name: git-auth
              mountPath: /ssh
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: wiki-0
      - name: images
        persistentVolumeClaim:
          claimName: wiki-images
      - name: git
        emptyDir: {}
      - name: git-auth
        secret:
          secretName: git-auth
          defaultMode: 0400
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wiki-0
spec:
  # https://help.ovhcloud.com/csm/en-public-cloud-kubernetes-persistent-volumes?id=kb_article_view&sysparm_article=KB0049928
  storageClassName: csi-cinder-high-speed
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wiki-images
spec:
  # https://help.ovhcloud.com/csm/en-public-cloud-kubernetes-persistent-volumes?id=kb_article_view&sysparm_article=KB0049928
  storageClassName: csi-cinder-high-speed
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: wiki-service
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: wiki
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wiki-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    external-dns.alpha.kubernetes.io/ttl: "60"
spec:
  ingressClassName: traefik
  tls:
    - hosts:
      - taqasta-dev-worker.teq.wiki
      secretName: cert-secret
  rules:
  - host: taqasta-dev-worker.teq.wiki
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: wiki-service
            port:
              number: 80
